# Database Configuration - CRITICAL for Vercel + Neon deployment
# Format: postgresql://username:password@host:port/database?sslmode=require
# Example for Neon: postgresql://user:pass@ep-xxx.us-east-1.aws.neon.tech:5432/main?sslmode=require
# IMPORTANT: Must include ?sslmode=require for production databases like Neon
DATABASE_URL=postgresql://brainliest_user:secure_password_123@localhost:5432/brainliest?sslmode=require

# VERCEL DEPLOYMENT INSTRUCTIONS:
# 1. Go to your Vercel project dashboard
# 2. Navigate to Settings â†’ Environment Variables  
# 3. Add DATABASE_URL with your complete Neon connection string
# 4. Make sure it's available for Production, Preview, and Development environments
# 5. Test your deployment by visiting: https://your-app.vercel.app/api/health

# Google Gemini AI Integration (Optional - for question help and explanations)
GOOGLE_GEMINI_API_KEY=your_gemini_api_key_here

# Session Security (REQUIRED - Generate a random 32+ character string)
SESSION_SECRET=your_super_secret_session_key_must_be_32_chars_minimum

# Environment Mode
NODE_ENV=production

# Optional: Port Configuration (defaults to 5000)
PORT=5000

# EMAIL SERVICE CONFIGURATION
# Choose one of the following email services for authentication emails:

# Option 1: Resend (Recommended - Professional email service)
# RESEND_API_KEY=your_resend_api_key_here

# Option 2: Titan Mail (GoDaddy's premium email service)
# TITAN_EMAIL=noreply@yourdomain.com
# TITAN_PASSWORD=your_titan_email_password

# Option 3: GoDaddy Workspace Email (Legacy)
# GODADDY_EMAIL=noreply@yourdomain.com
# GODADDY_PASSWORD=your_godaddy_email_password

# Option 4: Custom SMTP Server
# SMTP_HOST=smtp.youremailprovider.com
# SMTP_PORT=587
# SMTP_USER=noreply@yourdomain.com
# SMTP_PASSWORD=your_email_password

# Option 5: Gmail (Development/Testing only)
# GMAIL_USER=your.gmail@gmail.com
# GMAIL_APP_PASSWORD=your_gmail_app_password

# GOOGLE OAUTH CONFIGURATION
# Google OAuth Client ID for authentication (Get from Google Cloud Console)
VITE_GOOGLE_CLIENT_ID=your_google_oauth_client_id_here
# Google OAuth Client Secret (Server-side only, keep secure)
GOOGLE_CLIENT_SECRET=your_google_oauth_client_secret_here