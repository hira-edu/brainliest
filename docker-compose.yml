version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: brainliest-db
    environment:
      POSTGRES_DB: brainliest
      POSTGRES_USER: brainliest_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brainliest_user -d brainliest"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Brainliest Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: brainliest-app
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://brainliest_user:${DB_PASSWORD:-secure_password_123}@postgres:5432/brainliest
      SESSION_SECRET: ${SESSION_SECRET:-your_super_secret_session_key_must_be_32_chars_minimum}
      GOOGLE_GEMINI_API_KEY: ${GOOGLE_GEMINI_API_KEY:-}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: brainliest-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local