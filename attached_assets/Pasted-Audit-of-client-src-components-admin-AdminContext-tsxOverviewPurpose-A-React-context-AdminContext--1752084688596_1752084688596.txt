Audit of client/src/components/admin/AdminContext.tsxOverviewPurpose: A React context (AdminContext) and provider (AdminProvider) for managing admin authentication state, including user data, session tokens, login/logout, and activity tracking.
Key Features:Authentication: Handles login (/api/admin/auth/login), logout, and session verification (/api/admin/auth/verify) using JWT tokens stored in localStorage.
Session Management: Tracks user activity, monitors session health, and auto-validates tokens.
Context API: Provides adminUser, isLoading, error, and methods (login, logout, checkAuthStatus, trackActivity) to child components via useAdmin hook.
Dependencies:React (react@18.3.1): useState, useEffect, useCallback, useRef, useMemo, createContext, useContext.
No external libraries beyond React.
Custom utilities: None explicitly imported, but integrates with localStorage, sessionStorage, and cookies.
TypeScript Errors (assumed from context):Likely TS18046 (err is unknown) in login and checkAuthStatus catch blocks.
Possible issues with untyped API responses (data.user, data.token).
Deployment Context:Vercel: Must support CSR due to localStorage and client-side fetch calls.
Neon: Likely used for user authentication data, requiring secure API routes.
Icon System: No direct use of icons, but must align with lucide-react in consumers (e.g., AdminUsers.tsx).
Audit Findings1. Runtime ErrorsLocal Storage in SSR:localStorage.getItem('admin_token') and related operations are used without checking if localStorage is available, risking errors in SSR (e.g., Vercel’s Next.js).
Fix: Add typeof window !== 'undefined' checks.
Fetch Error Handling:fetch calls in login and checkAuthStatus don’t handle network errors or aborted requests gracefully.
Fix: Use apiRequest (from AdminUsers.tsx) for consistency and better error handling.
Controller Cleanup:AbortController is created but not always cleaned up (e.g., login and checkAuthStatus return cleanup but don’t ensure it’s called).
Fix: Use useEffect for cleanup.
Session Validation Race Condition:sessionValidationInProgress prevents concurrent checkAuthStatus calls, but rapid calls could still cause issues.
Fix: Debounce checkAuthStatus.
Cookie Cleanup:clearAllSessionData clears cookies but doesn’t handle secure/HTTP-only cookies, which may be used for admin_ tokens.
Fix: Ensure cookie cleanup aligns with backend cookie settings.
2. ConflictsToken Storage:Uses localStorage for admin_token, but AdminUsers.tsx uses adminToken (camelCase). This inconsistency could cause issues.
Fix: Standardize to admin_token (snake_case).
API Routes:Assumes /api/admin/auth/login and /api/admin/auth/verify exist, but no guarantee they’re defined in Vercel Functions.
Fix: Verify route definitions.
Error Handling:error state is a string, but consumers (e.g., AdminUsers.tsx) expect Error objects in mutations.
Fix: Use Error type for consistency.
Integration with AdminUsers.tsx:AdminUsers.tsx uses localStorage.getItem('adminToken') directly, bypassing AdminContext. This creates a dependency conflict.
Fix: Use useAdmin in AdminUsers.tsx for token access.
3. Duplicate CodeToken Management:getStoredToken, storeToken, and clearToken are specific to admin_token but could be generalized for other tokens.
Fix: Create a reusable useToken hook.
Session Cleanup:clearAllSessionData duplicates logic for clearing localStorage, sessionStorage, and cookies.
Fix: Extract to a utility function.
Fetch Logic:login and checkAuthStatus repeat similar fetch patterns.
Fix: Use apiRequest for shared logic.
4. Logical IssuesSession Expiry Warning:sessionHealthMonitor sets error to 'Session expiring soon' after 2 hours of inactivity but doesn’t trigger logout or notify the user effectively.
Fix: Add a toast notification and auto-logout.
Heartbeat Overlap:heartbeatInterval updates admin_last_activity every minute, but sessionHealthMonitor also calls trackActivity, causing redundant updates.
Fix: Remove trackActivity from sessionHealthMonitor.
Error State:error is reset in logout but not in other operations (e.g., successful login).
Fix: Reset error on success.
Recaptcha Token:recaptchaToken is optional in login but not validated or documented.
Fix: Clarify usage or enforce validation.
Accessibility:No ARIA attributes or focus management for auth-related UI (e.g., error messages).
Fix: Add ARIA alerts for errors.
5. TypeScript ErrorsTS18046 (err is unknown):In login and checkAuthStatus, err is typed as any, causing TS18046.
Fix: Type as Error.
Untyped API Responses:data.user and data.token in fetch responses are untyped, risking runtime errors.
Fix: Define response interfaces.
Nullable Fields:adminUser fields (e.g., role, emailVerified) are assumed non-null.
Fix: Add null checks or make fields required.
Error Type:error is string | null, but consumers may expect Error.
Fix: Use Error | null.
6. Vercel CompatibilityRSC Directive:Missing "use client" directive for client-side hooks (useState, useEffect, etc.).
Fix: Add "use client".
SSR Safety:localStorage and document.cookie access breaks SSR.
Fix: Wrap in useEffect or conditional checks.
API Routes:/api/admin/auth/* routes must be Vercel Functions with proper authentication.
Fix: Define routes and verify CORS.
7. Neon CompatibilityAuth Queries:Assumes Neon-backed user data for /api/admin/auth/*, but no optimization for query performance.
Fix: Ensure API routes use indexed queries.
Token Validation:Frequent checkAuthStatus calls could overload Neon.
Fix: Debounce or cache validation results.
8. Icon System AlignmentNo direct use of lucide-react, but consumers (AdminUsers.tsx, admin-simple.tsx) use icons.
Fix: Ensure useAdmin integrates with icon-related components if needed (e.g., user avatars).

9. Integration with Other FilesSecurityErrorBoundary:No integration with SecurityErrorBoundary.tsx, risking uncaught errors in auth operations.
Fix: Wrap provider or consumers in SecurityErrorBoundary.
AdminUsers.tsx:AdminUsers.tsx bypasses useAdmin for token access, causing redundancy.
Fix: Refactor AdminUsers.tsx to use useAdmin.
admin-simple.tsx:Shares localStorage.getItem('admin_token') usage, creating duplication.
Fix: Use useAdmin for token access.
QuestionLimitModal:Not directly relevant, but could be used for admin usage limits.
Fix: Consider integrating for admin quotas.
