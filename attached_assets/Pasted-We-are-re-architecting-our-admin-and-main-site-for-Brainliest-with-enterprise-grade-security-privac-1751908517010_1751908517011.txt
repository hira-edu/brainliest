We are re-architecting our admin and main site for Brainliest with enterprise-grade security, privacy, and UX.
Our goals are:

Persistent ("sticky") admin sessions: Admins stay logged in on admin.brainliest.com across refresh/navigate until explicit logout or session expiry.

Strict resource and session isolation: No admin JS/CSS/API/resources are ever loaded by the main site, except a lightweight presence check for an admin badge.

All admin code and routes run only on admin.brainliest.com.

Main site must display a green light ("admin present" badge) only to logged-in admins (not regular users, moderators, or visitors).

Moderator logins: Only through regular login page, never through admin subdomain.

Admin resources never load on homepage or main app; only on the admin subdomain.

Step-by-Step Instructions
1. Subdomain Split and Resource Isolation
Move all admin resources, code, and endpoints to admin.brainliest.com.

The main site (brainliest.com) must never bundle, import, or request admin resources, APIs, or static files except for the admin presence badge.

Use environment-aware builds, proper DNS, and deployment settings to guarantee clean separation.

2. Sticky Admin Sessions (Admin Subdomain Only)
On admin.brainliest.com, implement session storage using secure, HttpOnly, Secure, SameSite=None cookies, with the cookie domain set to .brainliest.com if you want to allow cross-subdomain awareness for the green light, or scoped to admin.brainliest.com for stricter isolation.

Sessions should persist across refresh/navigation/browser restarts (until expiry).

Use strong JWTs or session IDs; store only hashes or tokens, never passwords or PII.

Only the admin subdomain should allow login as admin; regular users and moderators must login on the main site.

3. Strict Admin Resource Loading
Ensure that on brainliest.com, no admin JS/CSS/chunks/APIs are loaded, rendered, or bundled except for the admin presence badge logic.

Only initialize admin features and API calls on admin.brainliest.com.

4. Secure Green Light (Admin Presence) Badge
On brainliest.com, create a dedicated API endpoint (/api/admin/presence) that:

Checks, server-side, for a valid, authenticated admin session/token/cookie.

Confirms the user’s role is 'admin' (not user or moderator).

Returns { admin: true } if authenticated as admin, else { admin: false }.

On the main site, load a small, unobtrusive green light UI only if { admin: true } is returned.

Do not show this indicator to logged-out users, regular users, or moderators under any circumstances.

Never expose any PII or admin session data in this API or UI—just true/false.

Example Secure API (Node/Express):
js
Copy
Edit
app.get('/api/admin/presence', authenticateJWT, (req, res) => {
  if (req.user && req.user.role === 'admin') {
    return res.json({ admin: true });
  }
  res.json({ admin: false });
});
Example Frontend Logic:
js
Copy
Edit
fetch('/api/admin/presence', { credentials: 'include' })
  .then(res => res.json())
  .then(data => {
    if (data.admin) {
      // Show green light badge
      const light = document.createElement('div');
      light.style = 'position:fixed;bottom:24px;right:24px;width:16px;height:16px;background:#2ecc40;border-radius:50%;box-shadow:0 0 6px #2ecc40;';
      light.title = 'You are logged in as admin';
      document.body.appendChild(light);
    }
  });
5. Navigation, Privacy, and Moderator Restrictions
Navigating between subdomains should respect session boundaries.

Logging out of admin subdomain should clear admin cookies/tokens, removing badge on main site on next refresh.

Moderators must only log in through the standard login page and never have access to /admin or admin.brainliest.com.

The main site never exposes, transmits, or bundles admin session data except for the lightweight presence check.

6. Security and Best Practices
Use HTTPS everywhere; set all cookies as Secure, HttpOnly.

All session validation for the green light badge is server-side, with no role/PII exposed in frontend code or network.

CORS and cookie settings should strictly allow only intended domain/subdomain origins.

No admin API endpoints or pages are ever accessible on the main site.

Never expose passwords or sensitive admin data in any client-facing API.

7. QA and Verification
✅ Sticky admin session persists on admin subdomain across refresh/navigate.

✅ Logging out of admin removes presence badge on the main site.

✅ Green light is never visible to non-admins, users, moderators, or guests.

✅ No admin JS/API/network calls on main site except for /api/admin/presence.

✅ Security headers, CORS, cookie settings all follow best practices.

✅ No admin data, session info, or resource is ever leaked to the main site.

Deliverable:
A secure, persistent (“sticky”) admin session with strict subdomain and resource isolation.
A green light indicator that appears only to logged-in admins on the main site—never to other users.
All admin resources are loaded and active only on admin.brainliest.com.