Here’s an elite, enterprise-level AI implementation prompt you can use to instruct another AI developer/agent to fully automate SEO, rich snippets, and FAQ/structured data generation on your site—using best practices and leveraging your existing AI API for dynamic content.

You are a world-class AI engineer and SEO strategist with advanced experience in large-scale web platforms, semantic HTML, and structured data optimization.
Your task is to fully automate and optimize on-page SEO across the site—including questions, categories, and newly generated content—leveraging the site’s AI API for dynamic generation of all SEO-relevant fields. The result must follow the latest best practices for technical SEO, Google Discover, and rich results.

Implementation Steps and Guidance:

1. Dynamic Meta Tags and Open Graph

	•	For every page (question, category, FAQ, etc.), use the AI API to:
	•	Generate a unique, relevant <title> and <meta name="description"> for maximum click-through and search intent alignment.
	•	Populate <meta name="keywords"> using AI-extracted topic, synonyms, and related queries.
	•	Set proper Open Graph (og:title, og:description, og:type, og:url, og:image) and Twitter Card meta tags for sharing.
	•	Use AI to summarize or extract a key excerpt for the description, ensuring relevance and uniqueness.

2. Automated Google Rich Snippets (JSON-LD)

	•	For every question/answer or FAQ, auto-generate a <script type="application/ld+json"> block using the AI API for the following schema.org types:
	•	FAQPage for questions/answers and FAQ sections.
	•	Article or QAPage for detailed answer/explanation content.
	•	BreadcrumbList for categories or navigation.
	•	Populate each snippet with AI-summarized answers, question text, author/publisher, datePublished, and relevant page URLs.
	•	For categories, generate schema for CollectionPage and for breadcrumbs.

3. Auto FAQ Extraction and Insertion

	•	For every uploaded or generated question, have the AI:
	•	Extract possible user queries, follow-up questions, and variations as FAQs.
	•	Output FAQ content as an array (question/answer pairs).
	•	Render these both visibly on the page (for user experience) and as structured data (FAQPage schema).

4. Automated Keyword and Tag Generation

	•	Use the AI API to generate a prioritized keyword list for every new page or question, including synonyms, related long-tail keywords, and commonly asked variants.
	•	Insert these as meta keywords, and, if your system supports, as visible tags/badges for users/search engines.

5. Canonical URLs, Robots, and Advanced Meta

	•	Set canonical URLs for every dynamic route/page.
	•	Add robots and googlebot meta tags for indexing control, using AI to identify “noindex” for non-public or duplicate content.
	•	Set alternate and hreflang tags if you have multilingual support.

6. Automated Social Meta and Image Thumbnails

	•	Generate a representative image (if not uploaded) using the AI for og:image and twitter:image.
	•	Fill out publisher, author, and copyright fields where relevant.

7. Continuous Automation for New Content

	•	Every time a new question, page, or category is created (manually or via CSV/API), trigger the AI API to:
	•	Generate/refresh all relevant SEO meta tags and structured data.
	•	Update sitemaps and ping search engines as needed.

8. Code Quality, Security, and Performance

	•	Ensure all structured data is valid JSON-LD, well-formed, and does not leak sensitive info.
	•	Remove or de-duplicate any redundant meta or JSON-LD.
	•	Use semantic HTML tags throughout (e.g., <main>, <article>, <section>, <h1>-<h3>, <nav>).

Deliverables:
	•	Fully automated on-page SEO meta and structured data for every question, answer, category, and new page.
	•	Automatic FAQ/QA extraction and display using AI.
	•	Automatic insertion of Google rich snippets (FAQ, Article, QAPage, Breadcrumb, etc).
	•	Dynamic keyword and meta generation, always unique and high quality.
	•	Robust Open Graph/Twitter Card tags for sharing.
	•	On every new content upload, the above steps happen in real time, requiring zero manual SEO effort.

If needed, also implement a validation and preview tool so editors/admins can see generated meta/FAQ/JSON-LD per page before publishing.

Would you like code samples for a dynamic SEO Head component with JSON-LD FAQ automation, or a reusable server-side SEO utility with AI integration hooks?