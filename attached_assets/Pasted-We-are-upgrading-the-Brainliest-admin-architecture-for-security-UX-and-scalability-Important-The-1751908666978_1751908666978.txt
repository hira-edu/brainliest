We are upgrading the Brainliest admin architecture for security, UX, and scalability.
Important: The implementation must not modify, break, or impact any core user-facing functionalities or core business logic of the main site.
The main site (brainliest.com) must remain functionally unchanged for users, except for the new admin presence indicator as described.

Goals:
Persistent (“sticky”) admin sessions—admins stay logged in on admin.brainliest.com until explicit logout or session expiry.

Strict subdomain/resource isolation: no admin resources, code, or API calls are ever loaded by the main site, except for a lightweight presence check.

All admin code and functionality run only on admin.brainliest.com.

Main site displays a green light (“admin present” badge) only to logged-in admins—never to regular users, moderators, or guests.

Moderator logins are restricted to the main login page, with no admin subdomain access.

No core logic, routes, or user-facing features are altered or degraded as part of these changes.

Step-by-Step Instructions:
1. Subdomain Split and Resource Isolation
Move all admin code, routes, and resources to admin.brainliest.com.

The main site must never bundle, import, or load admin resources, except for a minimal API call for admin presence.

Ensure no changes are made to the core business logic or main user flows.

2. Sticky Admin Sessions (Admin Subdomain Only)
Use secure, HttpOnly, Secure, SameSite=None cookies for admin sessions (scoped as needed for badge).

Sessions persist across navigation/refresh on admin.brainliest.com.

Main site sessions for regular users are not affected and must remain as is.

3. Strict Admin Resource Loading
No admin JS/CSS/chunks/API endpoints are loaded by the main site—only a lightweight /api/admin/presence check is allowed.

No modification to existing user, moderator, or guest flows.

4. Secure Green Light (Admin Presence) Badge
On main site (brainliest.com), create /api/admin/presence endpoint:

Checks server-side if the request is from an authenticated admin session.

Returns { admin: true } for admin, { admin: false } otherwise.

Main site code calls this endpoint.

Only shows the green badge if { admin: true }.

No badge, no extra UI for other users or moderators.

Never expose any user/admin/session details, and do not change any other UI or routes.

5. Navigation, Privacy, and Moderator Restrictions
Navigating between subdomains respects session boundaries, but no changes to existing user login, registration, or session flows.

Moderators must continue to log in only via normal login; no admin subdomain access.

Only admins see the green badge; all other roles/users are unaffected.

6. Security and Best Practices
Do not modify, interfere with, or affect the main site’s core authentication, user flows, or logic.

All changes are strictly isolated to admin session management, subdomain routing, and admin presence badge.