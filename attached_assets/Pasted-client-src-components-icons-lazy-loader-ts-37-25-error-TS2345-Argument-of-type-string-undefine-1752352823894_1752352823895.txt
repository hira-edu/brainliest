client/src/components/icons/lazy-loader.ts:37:25 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

37       this.cache.delete(firstKey);
                           ~~~~~~~~

client/src/components/icons/suspense-wrapper.tsx:50:8 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(props: P, context?: any): string | number | bigint | boolean | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | Promise<...> | Component<...> | null | undefined', gave the following error.
    Type '{ ref: ForwardedRef<SVGSVGElement>; } & PropsWithoutRef<P>' is not assignable to type 'IntrinsicAttributes & P'.
      Type '{ ref: ForwardedRef<SVGSVGElement>; } & PropsWithoutRef<P>' is not assignable to type 'P'.
        '{ ref: ForwardedRef<SVGSVGElement>; } & PropsWithoutRef<P>' is assignable to the constraint of type 'P', but 'P' could be instantiated with a different subtype of constraint 'IconProps'.
  Overload 2 of 2, '(props: P): string | number | bigint | boolean | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | Promise<...> | Component<...> | null | undefined', gave the following error.
    Type '{ ref: ForwardedRef<SVGSVGElement>; } & PropsWithoutRef<P>' is not assignable to type 'IntrinsicAttributes & P'.
      Type '{ ref: ForwardedRef<SVGSVGElement>; } & PropsWithoutRef<P>' is not assignable to type 'P'.
        '{ ref: ForwardedRef<SVGSVGElement>; } & PropsWithoutRef<P>' is assignable to the constraint of type 'P', but 'P' could be instantiated with a different subtype of constraint 'IconProps'.

50       <WrappedComponent ref={ref} {...props} />
          ~~~~~~~~~~~~~~~~


client/src/components/icons/types.ts:7:10 - error TS2305: Module '"react"' has no exported member 'Booleanish'.

7 import { Booleanish } from 'react'; // Import Booleanish for explicit typing
           ~~~~~~~~~~

client/src/components/modals/question-limit-modal.tsx:207:18 - error TS2339: Property 'success' does not exist on type 'void'.

207       if (result.success) {
                     ~~~~~~~

client/src/components/modals/question-limit-modal.tsx:218:32 - error TS2339: Property 'message' does not exist on type 'void'.

218         throw new Error(result.message || "Google sign-in failed");
                                   ~~~~~~~

client/src/components/SecurityErrorBoundary.tsx:237:7 - error TS2322: Type 'string | null | undefined' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.

237       componentStack: errorInfo.componentStack,
          ~~~~~~~~~~~~~~

  client/src/components/SecurityErrorBoundary.tsx:40:3
    40   componentStack?: string;
         ~~~~~~~~~~~~~~
    The expected type comes from property 'componentStack' which is declared here on type 'ErrorReportData'