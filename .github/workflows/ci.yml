name: Enhanced CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npx tsc --noEmit --skipLibCheck
    
    - name: Build application
      run: npm run build
    
    - name: Performance monitoring
      run: node scripts/performance-monitor.js --measure
    
    - name: Generate performance report
      run: node scripts/performance-monitor.js --report
    
    - name: Upload performance artifacts
      uses: actions/upload-artifact@v4
      with:
        name: performance-report-${{ matrix.node-version }}
        path: |
          build-performance-report.json
          performance-metrics.json
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.node-version }}
        path: dist/
    
    - name: Bundle size check
      run: |
        BUNDLE_SIZE=$(du -sk dist/ | cut -f1)
        echo "Bundle size: ${BUNDLE_SIZE}KB"
        if [ $BUNDLE_SIZE -gt 5000 ]; then
          echo "‚ö†Ô∏è  Bundle size exceeded 5MB limit"
          exit 1
        fi

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security audit
      run: npm audit --audit-level=high
    
    - name: Check for vulnerabilities
      run: |
        npm audit --json > audit-results.json
        VULNERABILITIES=$(cat audit-results.json | jq '.metadata.vulnerabilities.total')
        echo "Total vulnerabilities: $VULNERABILITIES"
        if [ $VULNERABILITIES -gt 0 ]; then
          echo "‚ö†Ô∏è  Security vulnerabilities found"
          npm audit
        fi

  deploy:
    needs: [quality-check, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
    
    - name: Deploy to production
      run: echo "üöÄ Deploying to production..."
      # Add your deployment commands here
